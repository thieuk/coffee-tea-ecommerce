{"version":3,"file":"static/js/333.d5dbba9b.chunk.js","mappings":"6MAEA,SAASA,IACLC,SAASC,cAAc,SAASC,MAAMC,YAAY,mBAAoB,QACtEH,SAASC,cAAc,SAASC,MAAMC,YAAY,qBAAsB,qBACxEH,SAASI,eAAe,gBAAgBF,MAAMG,QAAU,OACxDL,SAASI,eAAe,WAAWF,MAAMG,QAAU,MACvD,CAEA,SAASC,IACLN,SAASC,cAAc,SAASC,MAAMC,YAAY,mBAAoB,SACtEH,SAASC,cAAc,SAASC,MAAMC,YAAY,qBAAsB,iBACxEH,SAASI,eAAe,gBAAgBF,MAAMG,QAAU,QACxDL,SAASI,eAAe,WAAWF,MAAMG,QAAU,OACvD,CAEe,SAASE,EAAOC,GAC3B,OACI,iCACI,gBAAKC,GAAG,UAAUC,QAASX,EAAYY,UAAU,uFACjD,iBAAKA,UAAU,OAAM,WACjB,iBAAKF,GAAG,SAASE,UAAU,wEAAuE,WAC9F,gBAAKF,GAAG,eAAeG,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKC,OAAO,eAAeN,QAASX,EAAYY,UAAU,wCAAuC,UACpM,iBAAMM,cAAc,QAAQC,eAAe,QAAQC,EAAE,0EAEvDX,EAAMY,SAAS,GAAGC,OAAOC,KAAI,SAACC,GAAI,OAChC,iCACI,eAAIZ,UAAU,yBAAwB,SAAEY,EAAKC,WAE5CD,EAAKE,YAAYH,KAAI,SAACI,GAAG,OACtB,4BACI,kBAAOC,KAAK,WAAWlB,GAAE,UAAKc,EAAI,YAAIG,EAAIE,QAAQ,IAAK,MAAQC,MAAOH,EAClEf,UAAU,oCACd,kBAAOmB,QAAO,UAAKP,EAAI,YAAIG,EAAIE,QAAQ,IAAK,MAAO,SAAEF,MACnD,MAEX,QAGX,gBAAKd,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKC,OAAO,eAAeN,QAASJ,EAAYK,UAAU,gEAA+D,UAC1M,iBAAMM,cAAc,QAAQC,eAAe,QAAQC,EAAE,wNAKzE,CCxCe,SAASY,IACpB,IAAQtB,GAAOuB,EAAAA,EAAAA,MAAPvB,GACJW,EAAW,GAKf,MAHW,WAAPX,IAAiBW,EAAWa,EAAAA,GACrB,QAAPxB,IAAcW,EAAWc,EAAAA,IAGzB,iBAAKvB,UAAU,4BAA2B,WACpC,gBAAKwB,IAAKC,EAAAA,KAAAA,CAAQ,YAAUhB,EAAS,GAAGiB,OAASC,IAAI,WAAW3B,UAAU,cAC5E,iBAAKA,UAAU,gBAAe,WAC1B,SAAC,EAAM,CAACS,SAAUA,KAClB,gBAAKT,UAAU,gEAA+D,SACxES,EAAS,GAAGmB,KAAKjB,KAAI,SAACC,GAAI,OACxB,SAACiB,EAAA,EAAI,CAAeC,IAAKlB,EAAKkB,IAAKC,MAAOnB,EAAKmB,MAAOH,KAAMhB,EAAKgB,KAAMI,MAAOpB,EAAKoB,MAAOlC,GAAIc,EAAKd,GAAImC,KAAMrB,EAAKqB,KAAMC,SAAUtB,EAAKsB,UAA5HtB,EAAKd,GAAmI,WAM3K,C","sources":["components/Filter.js","pages/Product.js"],"sourcesContent":["import \"./Filter.css\";\r\n\r\nfunction hideFilter() {\r\n    document.querySelector(\":root\").style.setProperty(\"--filter-display\", \"none\");\r\n    document.querySelector(\":root\").style.setProperty(\"--filter-transform\", \"translateX(-100%)\");\r\n    document.getElementById(\"close-filter\").style.display = \"none\";\r\n    document.getElementById(\"blur-bg\").style.display = \"none\";\r\n}\r\n\r\nfunction showFilter() {\r\n    document.querySelector(\":root\").style.setProperty(\"--filter-display\", \"block\");\r\n    document.querySelector(\":root\").style.setProperty(\"--filter-transform\", \"translateX(0)\");\r\n    document.getElementById(\"close-filter\").style.display = \"block\";\r\n    document.getElementById(\"blur-bg\").style.display = \"block\";\r\n}\r\n\r\nexport default function Filter(props) {\r\n    return (\r\n        <>\r\n            <div id=\"blur-bg\" onClick={hideFilter} className=\"hidden absolute top-0 left-0 w-full h-[calc(100%+50px)] bg-neutral-500 opacity-60\"></div>\r\n            <div className=\"flex\">\r\n                <div id=\"filter\" className=\"md:relative absolute bg-neutral-100 w-[150px] h-[calc(100%+50px)] p-6\">\r\n                    <svg id=\"close-filter\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" onClick={hideFilter} className=\"hidden w-7 h-7 absolute top-3 right-3\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                    { props.itemData[1].filter.map((data) => (\r\n                        <>\r\n                            <h2 className=\"font-bold text-md py-2\">{data.category}</h2>\r\n\r\n                            {data.subCategory.map((sub) => (\r\n                                <div>\r\n                                    <input type=\"checkbox\" id={`${data}-${sub.replace(\" \", \"-\")}`} value={sub} \r\n                                        className=\"border-[1px] border-black mr-1\"/>\r\n                                    <label htmlFor={`${data}-${sub.replace(\" \", \"-\")}`}>{sub}</label>\r\n                                </div>\r\n                            ))}\r\n                        </>\r\n                    )) }\r\n                </div>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" onClick={showFilter} className=\"md:hidden w-10 h-10 p-2 m-2 rounded-full hover:bg-neutral-300\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M10.5 6h9.75M10.5 6a1.5 1.5 0 11-3 0m3 0a1.5 1.5 0 10-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-9.75 0h9.75\" />\r\n                </svg>\r\n            </div>\r\n        </>\r\n    );\r\n}","import { useParams } from \"react-router-dom\";\r\nimport { coffeeData, teaData } from '../data';\r\nimport Item from '../components/Item';\r\nimport Filter from '../components/Filter';\r\n\r\nexport default function Product() {\r\n    const { id } = useParams();\r\n    let itemData = [];\r\n\r\n    if (id === \"coffee\") itemData = coffeeData;\r\n    if (id === \"tea\") itemData = teaData;\r\n\r\n    return (\r\n        <div className=\"min-h-[calc(100vh-280px)]\">\r\n            { <img src={require(`../img/${itemData[0].hero}`)} alt=\"hero img\" className=\"w-screen\" /> }\r\n            <div className=\"relative flex\">\r\n                <Filter itemData={itemData}/>\r\n                <div className=\"flex flex-wrap w-full justify-center mt-5 gap-12 max-sm:gap-5\">\r\n                    { itemData[2].item.map((data) => (\r\n                        <Item key={data.id} img={data.img} brand={data.brand} item={data.item} price={data.price} id={data.id} sale={data.sale} discount={data.discount} />\r\n                    )) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":["hideFilter","document","querySelector","style","setProperty","getElementById","display","showFilter","Filter","props","id","onClick","className","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","itemData","filter","map","data","category","subCategory","sub","type","replace","value","htmlFor","Product","useParams","coffeeData","teaData","src","require","hero","alt","item","Item","img","brand","price","sale","discount"],"sourceRoot":""}